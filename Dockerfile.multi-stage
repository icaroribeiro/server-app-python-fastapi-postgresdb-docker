# Stage 1: Set up the base image
# --------------------------------------------------
FROM python:3.12-bookworm AS base
ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache
RUN pip install poetry
WORKDIR /app
COPY . ./

# Stage 2: Build the base image
# --------------------------------------------------
FROM base AS build
# Use the specialized cache mount feature of BuildKit
RUN --mount=type=cache,id=poetry,target=$POETRY_CACHE_DIR poetry install --without dev --no-root

# Stage 3: Start up the runtime image
# # --------------------------------------------------
FROM python:3.12-slim-bookworm AS runtime
ENV PYTHONPATH="$PYTHONPATH:/app" \    
    VIRTUAL_ENV=/app/.venv \
    PATH="/app/.venv/bin:$PATH"
RUN pip install alembic asyncpg
WORKDIR /app
COPY --from=build ${VIRTUAL_ENV} ${VIRTUAL_ENV}
COPY --from=build /app/alembic.ini ./
COPY --from=build /app/db/migrations ./db/migrations
COPY --from=build /app/db/models ./db/models
COPY --from=build /app/src ./src
COPY --from=build /app/scripts/startup.sh ./scripts/startup.sh
RUN chmod +x ./scripts/startup.sh
EXPOSE ${PORT}
CMD ["/bin/bash","-c","./scripts/startup.sh"]
